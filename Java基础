1.面向对象与面向过程的区别
	面向过程：面向过程的性能比面向对象高。因为类调用时需要实例化，开销大，比较消耗资源，所以当性能是最重要的考量因素的时候
	，比如单片机，嵌入式开发，Linux/Unix等一般采用面向过程开发。
	面向对象: 面向对象易维护、易复用、易扩展。因为面向对象有封装、继承、多态性的特性，可以设计出低耦合的系统，
	使系统更灵活。
    
面向对象性能比面向对象高？
  java是半编译语言，最终执行代码并不是可以直接被CPU执行的二进制机械码。
2.Java语言有哪些特点？
	1.面向对象；
	2.平台无关性；(JVM)
	3.支持多线程；
	4.支持网络编程。
3.关于JVM JDK和JRE的解答。
	JVM是运行Java字节码的虚拟机。
	
	什么是字节码？
	.class文件。

	java从源码到运行有3步：
	
	JVM类加载气首先加载字节码文件，通过解释器逐行解释执行。JIT编译器编译后会将对应的机器码保存下来，
	下次可直接使用。
	
	总结：
	JVM是运行字节码的虚拟机。
	
	JDK和JRE
	JDK是Java Development Kit,它是功能齐全的Java SDK。它拥有JRE的一切，还有编译器（javac）和
	工具（如javadoc）,它能够创建和编译一切。
	
	JRE是Java运行时环境。它是运行已编译Java编程的所有内容的集合。包括Java虚拟机（JVM）,java类库，
	java命令和其他一些基础构建，但是他不能用于创建新程序。
	
4.Oracle JDK和OpenJDK的对比
	略
5.Java和C++的区别
	都是面向对象的语言，都支持封装、继承、多态性
	Java不提供指针来直接访问内存，程序内存更加安全
	Java的类是单继承，C++支持多继承；虽然类不支持多继承，但是接口可以多继承。
	Java有自动内存管理机制，不需要程序员手动释放无用内存
6.什么是Java程序的主类 应用程序和小程序的主类有何不同
	一个程序中可以有多个类，但只能有一个类是朱磊。在Java应用程序中，这个主类是指包含main()方法的类/
	而在Java小程序中，这个主类是一个继承自系统类JApplet或Applet的子类。应用程序的主类不一定要求是
	public类，但小程序的主类必须是public类。主类是Java程序执行的入口点。
7.Java应用程序和小程序之间有哪些差别
	简单来讲应用程序是从主线程启动。applet小程序没有main()方法，猪要是嵌在浏览器页面上运行。
8.字符型常量和字符串常量的区别
	1.形式上：字符常量是单引号引起的1个字符；字符串常量是双引号引起的若干个字符
	2.含义上：字符常量相当于一个整型值（ASCII值），可以参加表达式运算；字符串常量代表一个地址值（该字符串在内存中的位置）
	3.占内存大小 字符常量只占2个字节；字符串常量占若干个字节
9.构造器能否被override
	在讲继承的时候我们知道弗雷的私有属性和构造方法不能被继承，所以Constructor不能被重写，但是可以overload(重载)，所以你可以看到一个类中有多个构造函数的情况
10.重载和重写的区别
	重载：发生在同一个类中，方法名必须相同，参数类型、个数不同、顺序不同，方法的返回值和访问修饰符可以不同
	重写：重写是子类对父类的允许访问的方法的实现过程进行重新编写，发生在子类中，方法名和参数列表必须相同，返回值范围小于等于父类，
	抛出的异常范围小于等于父类，访问修饰符范围大于等于父类。另外，如果父类方法访问修饰符为private，则该子类就不能重写该方法。
	也就是说方法提供的行为改变，而方法的外貌并没有改变。
11.Java面向对象编程三大特性:封装 继承 多态性
	封装
	封装把对象的属性私有化，同时提供一些可以被外界访问属性的方法，如果属性不想被外界访问，我们大可不必提供方法给外界访问。但是
	如果一个类没有提供给外界访问的方法，那么这个类也没有什么意义了。
	
	继承
	继承是使用已存在的类的定义作为基础建立新类的技术，新类的定义可以增加新的数据或者新的功能。也可以用父类的功能，但不能选择性地
	继承父类。通过继承我们能够非常方便以前的代码。
	
	关于继承的3点：
	1.子类拥有父类对象所有属性和方法（包括私有属性和私有方法），但是父类中的私有属性和方法子类是无法访问，只是拥有。 
	
	
