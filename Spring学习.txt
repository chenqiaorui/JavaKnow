AOP
	AOP思想的实现一般都是基于代理模式，在JAVA中一般采用JDK动态代理模式，但是我们都知道，JDK动态代理模式智能代理接口而不能代理类。因此，Spring AOP会这样子来进行切换，因为SpringAOP同时支持CGLIB、ASPECTJ、JDK动态代理。
		如果目标对象的实现类实现了接口，SpringAOP将会采用JDK动态代理来生成AOP代理类
		如果目标对象的实现类没有实现接口，SpringAOP将会caiyongCGLIB来生成AOP代理类
1.什么是Spring框架？
	Spring是一种轻量级开发框架，旨在提供开发人员的开发效率以及系统的可维护性。
	我们一般说Spring框架指的是SpringFramework，它是很多模块的集合，使用这些模块可以很方便地协助我们进行开发。这些模块分别是：核心容器、数据访问/继承、web、AOP（面向切面编程）、工具、消息和测试模块。比如：Core Container中的core组件是Soring所有组件的核心，Beans组件和Context组件是实现IOC和依赖注入的基础，AOP组件用来实现切面编程。
	Spring官网列出的Spring的6个特征：
		1.核心技术：依赖注入（DI），AOP，事件，资源，i18n，验证，数据绑定，类型转换，SpEL。
		2.测试：模拟对象，TestContext框架，Spring MVC测试，WebTestClient。
		3.数据访问：事务，DAO指出，JDBC，ORM，编组XML
		4.Web支持：Spring MVC、和Spring WebFlux Web框架
		5.集成：远程处理、JMLS、JCA，JMX，电子邮件，任务，调度，缓存。
		6.语言：Kotlin，Groovy，动态语言
2.列举一些重要的Spring模块？
	Spring Core，基础，可以说Spring其他所有的功能都需要依赖该类库。主要提供Ioc依赖注入
	Spring Aspects：该模块为与AspectJ的集成提供支持
	Spring AOP：提供了面向切面的编程实现
	Spring JDBC：Java数据库连接
	Spring HJMS：Java消息服务
	Spring ORM：用于支持1Hibernate等ORM工具
	Spring Web：为创建Web应用程序提供支持
	Spring Test：提供了对Junit和TestNG测试对支持
3.@RestController vs @Controller
	1.Controller返回一个页面
	单独使用@Controller不加@ResponseBody的话一般使用在要返回一个是土的情况，这种情况属于比较传统的SpringMVC的应用，对应于前后端不分离的情况。

	2.@RestController返回Json或XML形式的数据
	但RestController只返回对象，对象数据直接以JSON或XML形式写入HTTP响应（Response）中，这种情况属于RESTful Web服务，这也是目前日常开发所接触的最常用的情况（前后端分离）。
	3.@Controller + @Responsebody 返回Json或Xml形式数据
	如果你需要在Spring4之前开发RESTfulWeb服务的话，你需要使用@Controller

